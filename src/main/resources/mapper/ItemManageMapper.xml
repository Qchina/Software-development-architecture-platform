<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mypetstore.persistence.ItemManageMapper">
    <!-- 获取所有商品项 -->
    <select id="getItemManageList" resultType="com.example.mypetstore.domain.ItemManage">
--         SELECT itemid, productid, listprice, unitcost, supplier, status, attr1,attr2,attr3,attr4
--         FROM item
           SELECT i.itemid, i.productid, i.listprice, i.unitcost, i.supplier, i.status,
                  i.attr1 AS attribute1,
                  s.suppid AS supplierId
           FROM item i
         LEFT JOIN supplier s ON i.supplier = s.suppid;
    </select>
    <!-- 根据itemId获取单个商品项 -->
    <select id="getItemManageById" resultType="com.example.mypetstore.domain.ItemManage" parameterType="java.lang.String">
        SELECT itemid, productid, listprice, unitcost, supplier AS supplierId, status,
               attr1 AS attribute1,
               attr2,attr3,attr4
        FROM item
        WHERE itemid = #{itemId}

    </select>

    <!-- 新增商品项 -->
    <insert id="addItemManage" parameterType="com.example.mypetstore.domain.ItemManage">
        INSERT INTO item (itemid, productid, listprice, unitcost, supplier, status, attr1,attr2,attr3,attr4)
        VALUES (#{itemId}, #{productId}, #{listPrice}, #{unitCost}, #{supplierId}, #{status}, #{attribute1},#{attr2}, #{attr3}, #{attr4})
    </insert>
    <!-- 更新商品项 -->
    <update id="updateItemManage" parameterType="com.example.mypetstore.domain.ItemManage">
        UPDATE item
        SET productid = #{productId},
            listprice = #{listPrice},
            unitcost = #{unitCost},
            supplier = #{supplierId},
            status = #{status},
            attr1 = #{attribute1},
            attr2 = #{attr2, jdbcType=VARCHAR},
            attr3 = #{attr3, jdbcType=VARCHAR},
            attr4 = #{attr4, jdbcType=VARCHAR}
        WHERE itemid = #{itemId}
    </update>
    <!-- 删除商品项 -->
    <delete id="deleteItemManage" parameterType="java.lang.String">
        DELETE FROM item WHERE itemid = #{itemId}
    </delete>

    <!-- 更新商品上架/下架状态 -->
    <update id="updateItemStatus" parameterType="map">
        UPDATE item
        SET status = #{status}
        WHERE itemid = #{itemId}
    </update>

    <!-- 根据 productId 和 categoryId 查询 Item -->
    <select id="getItemsByProductAndCategory" resultType="com.example.mypetstore.domain.ItemManage">
        SELECT i.itemid, i.productid, i.listprice, i.unitcost, i.supplier AS supplierId, i.status,
               i.attr1 AS attribute1, i.attr2, i.attr3, i.attr4
        FROM item i
                 JOIN product p ON i.productid = p.productid
        WHERE p.productid = #{productId} AND p.category = #{categoryId}
    </select>

    <!-- 根据 categoryId 查询 Item -->
    <select id="getItemsByCategory" resultType="com.example.mypetstore.domain.ItemManage"
    >
        SELECT i.itemid, i.productid, i.listprice, i.unitcost, i.supplier AS supplierId, i.status,
               i.attr1 AS attribute1, i.attr2, i.attr3, i.attr4
        FROM item i
                 JOIN product p ON i.productid = p.productid
        WHERE p.category = #{categoryId}
    </select
    >

</mapper>